{"version":3,"file":"component---src-templates-post-template-tsx-b794425ecb18dc1aa399.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Post/PostContent.tsx","webpack://gatsby-starter-default/./src/components/Post/CommentWidget.tsx","webpack://gatsby-starter-default/./src/components/Post/Toc.tsx","webpack://gatsby-starter-default/./src/components/Post/PostHeadInfo.tsx","webpack://gatsby-starter-default/./src/components/Post/Profile.tsx","webpack://gatsby-starter-default/./src/templates/post_template.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react'\r\n// import styled from '@emotion/styled'\r\n\r\ninterface PostContentProps {\r\n    html: string\r\n}\r\n\r\n// const MarkdownRenderer = styled.div`\r\n//   // Renderer Style\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   width: 768px;\r\n//   margin: 0 auto;\r\n//   padding: 100px 0;\r\n// `\r\n\r\nconst PostContent: FunctionComponent<PostContentProps> = function ({\r\n    html\r\n}) {\r\n    return(\r\n        <>\r\n            <div className=\"post-content-md\" dangerouslySetInnerHTML={{__html: html}}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostContent","import React, { createRef, FunctionComponent, useEffect } from 'react'\r\n\r\nconst src = 'https://utteranc.es/client.js'\r\nconst repo = 'super-mangomango/super-mangomango.github.io' // 자신 계정의 레포지토리로 설정\r\n\r\ntype UtterancesAttributesType = {\r\n    src: string\r\n    repo: string\r\n    'issue-term': string\r\n    label: string\r\n    theme: string\r\n    crossorigin: string\r\n    async: string\r\n};\r\n\r\nconst CommentWidget: FunctionComponent = function () {\r\n    const element = createRef<HTMLDivElement>()\r\n\r\n    useEffect(() => {\r\n        if (element.current === null) return\r\n\r\n        const utterances: HTMLScriptElement = document.createElement('script')\r\n\r\n        const attributes: UtterancesAttributesType = {\r\n            src,\r\n            repo,\r\n            'issue-term': 'pathname',\r\n            label: 'Comment',\r\n            theme: `github-light`,\r\n            crossorigin: 'anonymous',\r\n            async: 'true',\r\n        }\r\n\r\n        Object.entries(attributes).forEach(([key, value]) => {\r\n            utterances.setAttribute(key, value)\r\n        })\r\n\r\n        element.current.appendChild(utterances)\r\n    }, [])\r\n\r\n    return <div ref={element} />\r\n}\r\n\r\nexport default CommentWidget","import React, { FunctionComponent } from \"react\";\r\n\r\ninterface  PostTocProps {\r\n    html: string\r\n}\r\n\r\nconst Toc: FunctionComponent<PostTocProps> = function ({ html }) {\r\n    return <aside className='post-toc' dangerouslySetInnerHTML={{ __html:html }} />\r\n}\r\n\r\nexport default Toc","import React, { FunctionComponent } from 'react'\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n// import { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport '../../Style.scss'\r\n\r\n\r\nexport type PostHeadInfoProps = {\r\n    // title: string\r\n    date: string\r\n    categories: string[]\r\n    title: string\r\n    thumbnail:{\r\n        publicURL:string\r\n    }\r\n    headimage: {\r\n        publicURL: string\r\n    }\r\n}\r\n\r\n\r\n\r\nconst PostHeadInfo: FunctionComponent<PostHeadInfoProps> = function ({\r\n    // title,\r\n    date,\r\n    categories,\r\n    headimage,\r\n    title,\r\n    thumbnail\r\n}) {\r\n    // const goBackPage = () => window.history.back()\r\nconst CategoryList = categories.map((name)=>\r\n    <div className=\"post-head-category\" key={name}><div className=\"post-category-text\">{name}</div></div>\r\n)\r\n    return (\r\n        <div className=\"post-head-info\">\r\n        <div className=\"post-head-info-wrapper\">\r\n            {/*<div className=\"prev-page-icon\" onClick={goBackPage}>*/}\r\n            {/*    <FontAwesomeIcon icon={faArrowLeft} />*/}\r\n            {/*    <div className=\"icon-text\">이전 페이지</div>*/}\r\n            {/*</div>*/}\r\n            <img src={headimage.publicURL} alt=\"head-img\" className=\"post-head-img-PC\"/>\r\n            <img src={thumbnail.publicURL} alt=\"head-img\" className=\"post-head-img-mobile\"/>\r\n            <div className=\"head-list-wrapper\" >\r\n                <div className=\"post-head-category-wrapper\">\r\n                    {CategoryList}\r\n                </div>\r\n                <div className=\"post-head-date\">{date.substring(0,date.length-1)}</div>\r\n            </div>\r\n        </div>\r\n        <div className=\"post-head-title\">{title}</div>\r\n</div>\r\n    )\r\n}\r\n\r\nexport default PostHeadInfo","import React, { FunctionComponent } from 'react'\r\nimport '../../Style.scss'\r\n\r\n\r\nexport type PostProfileProps = {\r\n    author: string[]\r\n    profile: {\r\n        publicURL:string\r\n    }\r\n}\r\n\r\nconst Profile: FunctionComponent<PostProfileProps> = function ({\r\n    author,\r\n    profile\r\n}) {\r\n    return (\r\n        <div className=\"profile-wrapper\">\r\n            <div className=\"profile-photo\">\r\n                <img className=\"profile-photo-img\" src={profile.publicURL} alt=\"profile-photo\"/>\r\n            </div>\r\n            <div className=\"author-info-wrapper\">\r\n                <div className=\"author-name\">@{author[0]}</div>\r\n                <div className=\"author-text-wrapper\">\r\n                    <div className=\"author-text-info\">{author[1]}<br/>{author[2]}</div>\r\n                    <div className=\"author-mail\">{author[3]}</div>\r\n                    {/*<div className=\"author-text-detail\">{author[2]}</div>*/}\r\n                    {/*<div className=\"author-link\">*/}\r\n                    {/*    <a className=\"mailtoauthor\" href=\"mailto:\"{...author[3]}><img className=\"mailto\" src={mail} alt=\"mail\" /></a>*/}\r\n                    {/*    <a className=\"gitauthor\" href={author[5]}><img className=\"gitto\" src={git} alt=\"git\" /></a>*/}\r\n                    {/*</div>*/}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React, { FunctionComponent } from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport PostContent from \"components/Post/PostContent\";\r\nimport CommentWidget from \"components/Post/CommentWidget\";\r\nimport Template from \"components/Common/Template\";\r\nimport Toc from \"components/Post/Toc\"\r\nimport PostHeadInfo from \"components/Post/PostHeadInfo\";\r\nimport Profile from \"components/Post/Profile\";\r\nimport \"../MarkdownHtml.scss\"\r\nimport \"../Style.scss\"\r\nimport {IGatsbyImageData} from \"gatsby-plugin-image\";\r\n\r\n\r\ntype PostTemplateProps = {\r\n    data: {\r\n        allMarkdownRemark: {\r\n            edges: PostPageItemType[]\r\n        }\r\n    }\r\n    location: {\r\n        href: string\r\n    }\r\n\r\n}\r\n \r\n\r\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\r\n    data: {\r\n        allMarkdownRemark: { edges },\r\n    },\r\n    location: {href}\r\n}) {\r\n    // @ts-ignore\r\n    const {\r\n        node: {\r\n            html,\r\n            frontmatter: {\r\n                title,\r\n                summary, // 나중에 사용할 예정입니다!\r\n                date,\r\n                categories,\r\n                thumbnail,\r\n                thumbnail: {\r\n                    publicURL,\r\n                },\r\n                headimage,\r\n                author,\r\n                profile,\r\n            },\r\n            tableOfContents\r\n        },\r\n    } = edges[0]\r\n\r\n    return <>\r\n        <Template title={title} description={summary} url={href} image={publicURL} >\r\n            <div className=\"post-content-wrapper\">\r\n                <PostHeadInfo date={date} categories={categories} title={title} thumbnail={thumbnail} headimage={headimage} />\r\n                <div className=\"post-html-wrapper\">\r\n                    <PostContent html={html} />\r\n                    <Toc html={tableOfContents}/>\r\n                </div>\r\n                <Profile author={author} profile={profile}/>\r\n            <CommentWidget/>\r\n            </div>\r\n        </Template>\r\n    </>\r\n}\r\n\r\nexport default PostTemplate\r\n\r\nexport const queryMarkdownDataBySlug = graphql`\r\n  query queryMarkdownDataBySlug($slug: String) {\r\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\r\n      edges {\r\n        node {\r\n          html\r\n          frontmatter {\r\n            title\r\n            summary\r\n            date(formatString: \"YYYY.MM.DD.\")\r\n            categories\r\n            thumbnail {\r\n              childImageSharp {\r\n                gatsbyImageData\r\n              }\r\n              publicURL\r\n            }\r\n            headimage {\r\n              publicURL\r\n            }\r\n            profile {\r\n              publicURL\r\n            }\r\n            author\r\n          }\r\n          tableOfContents\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\nexport type PostPageItemType = {\r\n    node: {\r\n        html: string\r\n        frontmatter: {\r\n            title: string\r\n            date: string\r\n            categories: string[]\r\n            summary: string\r\n            thumbnail: {\r\n                childImageSharp: {\r\n                    gatsbyImageData: IGatsbyImageData\r\n                }\r\n                publicURL: string\r\n            }\r\n            tableOfContents:string\r\n        }\r\n    }\r\n}"],"names":["html","___EmotionJSX","className","dangerouslySetInnerHTML","__html","element","createRef","useEffect","current","utterances","document","createElement","attributes","src","repo","label","theme","crossorigin","async","Object","entries","forEach","key","value","setAttribute","appendChild","ref","date","categories","headimage","title","thumbnail","CategoryList","map","name","publicURL","alt","substring","length","author","profile","edges","data","allMarkdownRemark","href","location","node","frontmatter","summary","tableOfContents","Template","description","url","image","PostHeadInfo","PostContent","Toc","Profile","CommentWidget"],"sourceRoot":""}