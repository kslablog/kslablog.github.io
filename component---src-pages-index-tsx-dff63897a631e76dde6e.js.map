{"version":3,"file":"component---src-pages-index-tsx-dff63897a631e76dde6e.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://gatsby-starter-default/./node_modules/camelcase/index.js","webpack://gatsby-starter-default/./node_modules/decode-uri-component/index.js","webpack://gatsby-starter-default/./node_modules/filter-obj/index.js","webpack://gatsby-starter-default/./node_modules/query-string/index.js","webpack://gatsby-starter-default/./node_modules/split-on-first/index.js","webpack://gatsby-starter-default/./node_modules/strict-uri-encode/index.js","webpack://gatsby-starter-default/../src/image-utils.ts","webpack://gatsby-starter-default/../src/components/hooks.ts","webpack://gatsby-starter-default/../src/components/picture.tsx","webpack://gatsby-starter-default/../src/components/layout-wrapper.tsx","webpack://gatsby-starter-default/../src/components/placeholder.tsx","webpack://gatsby-starter-default/../src/components/main-image.tsx","webpack://gatsby-starter-default/../src/components/gatsby-image.browser.tsx","webpack://gatsby-starter-default/../src/components/gatsby-image.server.tsx","webpack://gatsby-starter-default/../src/components/static-image.server.tsx","webpack://gatsby-starter-default/../src/components/static-image.tsx","webpack://gatsby-starter-default/./node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.browser.esm.js","webpack://gatsby-starter-default/./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js","webpack://gatsby-starter-default/./src/components/Main/CategoryList.tsx","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://gatsby-starter-default/./src/components/Main/TopSection.tsx","webpack://gatsby-starter-default/./src/components/Main/PostItem.tsx","webpack://gatsby-starter-default/./src/components/Main/PostList.tsx","webpack://gatsby-starter-default/./src/pages/index.tsx"],"sourcesContent":["var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\nvar preserveCamelCase = function preserveCamelCase(string) {\n  var isLastCharLower = false;\n  var isLastCharUpper = false;\n  var isLastLastCharUpper = false;\n\n  for (var i = 0; i < string.length; i++) {\n    var character = string[i];\n\n    if (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n      string = string.slice(0, i) + '-' + string.slice(i);\n      isLastCharLower = false;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = true;\n      i++;\n    } else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n      string = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = false;\n      isLastCharLower = true;\n    } else {\n      isLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n    }\n  }\n\n  return string;\n};\n\nvar camelCase = function camelCase(input, options) {\n  if (!(typeof input === 'string' || Array.isArray(input))) {\n    throw new TypeError('Expected the input to be `string | string[]`');\n  }\n\n  options = Object.assign({\n    pascalCase: false\n  }, options);\n\n  var postProcess = function postProcess(x) {\n    return options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n  };\n\n  if (Array.isArray(input)) {\n    input = input.map(function (x) {\n      return x.trim();\n    }).filter(function (x) {\n      return x.length;\n    }).join('-');\n  } else {\n    input = input.trim();\n  }\n\n  if (input.length === 0) {\n    return '';\n  }\n\n  if (input.length === 1) {\n    return options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n  }\n\n  var hasUpperCase = input !== input.toLowerCase();\n\n  if (hasUpperCase) {\n    input = preserveCamelCase(input);\n  }\n\n  input = input.replace(/^[_.\\- ]+/, '').toLowerCase().replace(/[_.\\- ]+(\\w|$)/g, function (_, p1) {\n    return p1.toUpperCase();\n  }).replace(/\\d+(\\w|$)/g, function (m) {\n    return m.toUpperCase();\n  });\n  return postProcess(input);\n};\n\nmodule.exports = camelCase; // TODO: Remove this for the next major release\n\nmodule.exports.default = camelCase;","'use strict';\n\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n  try {\n    // Try to decode the entire string first\n    return decodeURIComponent(components.join(''));\n  } catch (err) {// Do nothing\n  }\n\n  if (components.length === 1) {\n    return components;\n  }\n\n  split = split || 1; // Split the array in 2 parts\n\n  var left = components.slice(0, split);\n  var right = components.slice(split);\n  return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input);\n  } catch (err) {\n    var tokens = input.match(singleMatcher);\n\n    for (var i = 1; i < tokens.length; i++) {\n      input = decodeComponents(tokens, i).join('');\n      tokens = input.match(singleMatcher);\n    }\n\n    return input;\n  }\n}\n\nfunction customDecodeURIComponent(input) {\n  // Keep track of all the replacements and prefill the map with the `BOM`\n  var replaceMap = {\n    '%FE%FF': \"\\uFFFD\\uFFFD\",\n    '%FF%FE': \"\\uFFFD\\uFFFD\"\n  };\n  var match = multiMatcher.exec(input);\n\n  while (match) {\n    try {\n      // Decode as big chunks as possible\n      replaceMap[match[0]] = decodeURIComponent(match[0]);\n    } catch (err) {\n      var result = decode(match[0]);\n\n      if (result !== match[0]) {\n        replaceMap[match[0]] = result;\n      }\n    }\n\n    match = multiMatcher.exec(input);\n  } // Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\n\n  replaceMap['%C2'] = \"\\uFFFD\";\n  var entries = Object.keys(replaceMap);\n\n  for (var i = 0; i < entries.length; i++) {\n    // Replace all decoded components\n    var key = entries[i];\n    input = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n  }\n\n  return input;\n}\n\nmodule.exports = function (encodedURI) {\n  if (typeof encodedURI !== 'string') {\n    throw new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n  }\n\n  try {\n    encodedURI = encodedURI.replace(/\\+/g, ' '); // Try the built in decoder first\n\n    return decodeURIComponent(encodedURI);\n  } catch (err) {\n    // Fallback to a more advanced decoder\n    return customDecodeURIComponent(encodedURI);\n  }\n};","'use strict';\n\nmodule.exports = function (obj, predicate) {\n  var ret = {};\n  var keys = Object.keys(obj);\n  var isArr = Array.isArray(predicate);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var val = obj[key];\n\n    if (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n      ret[key] = val;\n    }\n  }\n\n  return ret;\n};","'use strict';\n\nvar _defineProperty = require(\"C:/Users/jypge/Documents/kslablog.github.io/node_modules/@babel/runtime/helpers/defineProperty.js\");\n\nvar _slicedToArray = require(\"C:/Users/jypge/Documents/kslablog.github.io/node_modules/@babel/runtime/helpers/slicedToArray.js\");\n\nvar _toConsumableArray = require(\"C:/Users/jypge/Documents/kslablog.github.io/node_modules/@babel/runtime/helpers/toConsumableArray.js\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar strictUriEncode = require('strict-uri-encode');\n\nvar decodeComponent = require('decode-uri-component');\n\nvar splitOnFirst = require('split-on-first');\n\nvar filterObject = require('filter-obj');\n\nvar isNullOrUndefined = function isNullOrUndefined(value) {\n  return value === null || value === undefined;\n};\n\nvar encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n  switch (options.arrayFormat) {\n    case 'index':\n      return function (key) {\n        return function (result, value) {\n          var index = result.length;\n\n          if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [[encode(key, options), '[', index, ']'].join('')]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')]);\n        };\n      };\n\n    case 'bracket':\n      return function (key) {\n        return function (result, value) {\n          if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [[encode(key, options), '[]'].join('')]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), '[]=', encode(value, options)].join('')]);\n        };\n      };\n\n    case 'colon-list-separator':\n      return function (key) {\n        return function (result, value) {\n          if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [[encode(key, options), ':list='].join('')]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), ':list=', encode(value, options)].join('')]);\n        };\n      };\n\n    case 'comma':\n    case 'separator':\n    case 'bracket-separator':\n      {\n        var keyValueSep = options.arrayFormat === 'bracket-separator' ? '[]=' : '=';\n        return function (key) {\n          return function (result, value) {\n            if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n              return result;\n            } // Translate null to an empty string so that it doesn't serialize as 'null'\n\n\n            value = value === null ? '' : value;\n\n            if (result.length === 0) {\n              return [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n            }\n\n            return [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n          };\n        };\n      }\n\n    default:\n      return function (key) {\n        return function (result, value) {\n          if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [encode(key, options)]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), '=', encode(value, options)].join('')]);\n        };\n      };\n  }\n}\n\nfunction parserForArrayFormat(options) {\n  var result;\n\n  switch (options.arrayFormat) {\n    case 'index':\n      return function (key, value, accumulator) {\n        result = /\\[(\\d*)\\]$/.exec(key);\n        key = key.replace(/\\[\\d*\\]$/, '');\n\n        if (!result) {\n          accumulator[key] = value;\n          return;\n        }\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = {};\n        }\n\n        accumulator[key][result[1]] = value;\n      };\n\n    case 'bracket':\n      return function (key, value, accumulator) {\n        result = /(\\[\\])$/.exec(key);\n        key = key.replace(/\\[\\]$/, '');\n\n        if (!result) {\n          accumulator[key] = value;\n          return;\n        }\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = [value];\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], value);\n      };\n\n    case 'colon-list-separator':\n      return function (key, value, accumulator) {\n        result = /(:list)$/.exec(key);\n        key = key.replace(/:list$/, '');\n\n        if (!result) {\n          accumulator[key] = value;\n          return;\n        }\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = [value];\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], value);\n      };\n\n    case 'comma':\n    case 'separator':\n      return function (key, value, accumulator) {\n        var isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n        var isEncodedArray = typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator);\n        value = isEncodedArray ? decode(value, options) : value;\n        var newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(function (item) {\n          return decode(item, options);\n        }) : value === null ? value : decode(value, options);\n        accumulator[key] = newValue;\n      };\n\n    case 'bracket-separator':\n      return function (key, value, accumulator) {\n        var isArray = /(\\[\\])$/.test(key);\n        key = key.replace(/\\[\\]$/, '');\n\n        if (!isArray) {\n          accumulator[key] = value ? decode(value, options) : value;\n          return;\n        }\n\n        var arrayValue = value === null ? [] : value.split(options.arrayFormatSeparator).map(function (item) {\n          return decode(item, options);\n        });\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = arrayValue;\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], arrayValue);\n      };\n\n    default:\n      return function (key, value, accumulator) {\n        if (accumulator[key] === undefined) {\n          accumulator[key] = value;\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], value);\n      };\n  }\n}\n\nfunction validateArrayFormatSeparator(value) {\n  if (typeof value !== 'string' || value.length !== 1) {\n    throw new TypeError('arrayFormatSeparator must be single character string');\n  }\n}\n\nfunction encode(value, options) {\n  if (options.encode) {\n    return options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n  }\n\n  return value;\n}\n\nfunction decode(value, options) {\n  if (options.decode) {\n    return decodeComponent(value);\n  }\n\n  return value;\n}\n\nfunction keysSorter(input) {\n  if (Array.isArray(input)) {\n    return input.sort();\n  }\n\n  if (typeof input === 'object') {\n    return keysSorter(Object.keys(input)).sort(function (a, b) {\n      return Number(a) - Number(b);\n    }).map(function (key) {\n      return input[key];\n    });\n  }\n\n  return input;\n}\n\nfunction removeHash(input) {\n  var hashStart = input.indexOf('#');\n\n  if (hashStart !== -1) {\n    input = input.slice(0, hashStart);\n  }\n\n  return input;\n}\n\nfunction getHash(url) {\n  var hash = '';\n  var hashStart = url.indexOf('#');\n\n  if (hashStart !== -1) {\n    hash = url.slice(hashStart);\n  }\n\n  return hash;\n}\n\nfunction extract(input) {\n  input = removeHash(input);\n  var queryStart = input.indexOf('?');\n\n  if (queryStart === -1) {\n    return '';\n  }\n\n  return input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n  if (options.parseNumbers && !Number.isNaN(Number(value)) && typeof value === 'string' && value.trim() !== '') {\n    value = Number(value);\n  } else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n    value = value.toLowerCase() === 'true';\n  }\n\n  return value;\n}\n\nfunction parse(query, options) {\n  options = Object.assign({\n    decode: true,\n    sort: true,\n    arrayFormat: 'none',\n    arrayFormatSeparator: ',',\n    parseNumbers: false,\n    parseBooleans: false\n  }, options);\n  validateArrayFormatSeparator(options.arrayFormatSeparator);\n  var formatter = parserForArrayFormat(options); // Create an object with no prototype\n\n  var ret = Object.create(null);\n\n  if (typeof query !== 'string') {\n    return ret;\n  }\n\n  query = query.trim().replace(/^[?#&]/, '');\n\n  if (!query) {\n    return ret;\n  }\n\n  var _iterator = _createForOfIteratorHelper(query.split('&')),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var param = _step.value;\n\n      if (param === '') {\n        continue;\n      }\n\n      var _splitOnFirst = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '='),\n          _splitOnFirst2 = _slicedToArray(_splitOnFirst, 2),\n          _key = _splitOnFirst2[0],\n          _value = _splitOnFirst2[1]; // Missing `=` should be `null`:\n      // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\n\n      _value = _value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? _value : decode(_value, options);\n      formatter(decode(_key, options), _value, ret);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  for (var _i = 0, _Object$keys = Object.keys(ret); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    var value = ret[key];\n\n    if (typeof value === 'object' && value !== null) {\n      for (var _i2 = 0, _Object$keys2 = Object.keys(value); _i2 < _Object$keys2.length; _i2++) {\n        var k = _Object$keys2[_i2];\n        value[k] = parseValue(value[k], options);\n      }\n    } else {\n      ret[key] = parseValue(value, options);\n    }\n  }\n\n  if (options.sort === false) {\n    return ret;\n  }\n\n  return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce(function (result, key) {\n    var value = ret[key];\n\n    if (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n      // Sort object keys, not values\n      result[key] = keysSorter(value);\n    } else {\n      result[key] = value;\n    }\n\n    return result;\n  }, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = function (object, options) {\n  if (!object) {\n    return '';\n  }\n\n  options = Object.assign({\n    encode: true,\n    strict: true,\n    arrayFormat: 'none',\n    arrayFormatSeparator: ','\n  }, options);\n  validateArrayFormatSeparator(options.arrayFormatSeparator);\n\n  var shouldFilter = function shouldFilter(key) {\n    return options.skipNull && isNullOrUndefined(object[key]) || options.skipEmptyString && object[key] === '';\n  };\n\n  var formatter = encoderForArrayFormat(options);\n  var objectCopy = {};\n\n  for (var _i3 = 0, _Object$keys3 = Object.keys(object); _i3 < _Object$keys3.length; _i3++) {\n    var key = _Object$keys3[_i3];\n\n    if (!shouldFilter(key)) {\n      objectCopy[key] = object[key];\n    }\n  }\n\n  var keys = Object.keys(objectCopy);\n\n  if (options.sort !== false) {\n    keys.sort(options.sort);\n  }\n\n  return keys.map(function (key) {\n    var value = object[key];\n\n    if (value === undefined) {\n      return '';\n    }\n\n    if (value === null) {\n      return encode(key, options);\n    }\n\n    if (Array.isArray(value)) {\n      if (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n        return encode(key, options) + '[]';\n      }\n\n      return value.reduce(formatter(key), []).join('&');\n    }\n\n    return encode(key, options) + '=' + encode(value, options);\n  }).filter(function (x) {\n    return x.length > 0;\n  }).join('&');\n};\n\nexports.parseUrl = function (url, options) {\n  options = Object.assign({\n    decode: true\n  }, options);\n\n  var _splitOnFirst3 = splitOnFirst(url, '#'),\n      _splitOnFirst4 = _slicedToArray(_splitOnFirst3, 2),\n      url_ = _splitOnFirst4[0],\n      hash = _splitOnFirst4[1];\n\n  return Object.assign({\n    url: url_.split('?')[0] || '',\n    query: parse(extract(url), options)\n  }, options && options.parseFragmentIdentifier && hash ? {\n    fragmentIdentifier: decode(hash, options)\n  } : {});\n};\n\nexports.stringifyUrl = function (object, options) {\n  options = Object.assign(_defineProperty({\n    encode: true,\n    strict: true\n  }, encodeFragmentIdentifier, true), options);\n  var url = removeHash(object.url).split('?')[0] || '';\n  var queryFromUrl = exports.extract(object.url);\n  var parsedQueryFromUrl = exports.parse(queryFromUrl, {\n    sort: false\n  });\n  var query = Object.assign(parsedQueryFromUrl, object.query);\n  var queryString = exports.stringify(query, options);\n\n  if (queryString) {\n    queryString = \"?\".concat(queryString);\n  }\n\n  var hash = getHash(object.url);\n\n  if (object.fragmentIdentifier) {\n    hash = \"#\".concat(options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier);\n  }\n\n  return \"\".concat(url).concat(queryString).concat(hash);\n};\n\nexports.pick = function (input, filter, options) {\n  options = Object.assign(_defineProperty({\n    parseFragmentIdentifier: true\n  }, encodeFragmentIdentifier, false), options);\n\n  var _exports$parseUrl = exports.parseUrl(input, options),\n      url = _exports$parseUrl.url,\n      query = _exports$parseUrl.query,\n      fragmentIdentifier = _exports$parseUrl.fragmentIdentifier;\n\n  return exports.stringifyUrl({\n    url: url,\n    query: filterObject(query, filter),\n    fragmentIdentifier: fragmentIdentifier\n  }, options);\n};\n\nexports.exclude = function (input, filter, options) {\n  var exclusionFilter = Array.isArray(filter) ? function (key) {\n    return !filter.includes(key);\n  } : function (key, value) {\n    return !filter(key, value);\n  };\n  return exports.pick(input, exclusionFilter, options);\n};","'use strict';\n\nmodule.exports = function (string, separator) {\n  if (!(typeof string === 'string' && typeof separator === 'string')) {\n    throw new TypeError('Expected the arguments to be of type `string`');\n  }\n\n  if (separator === '') {\n    return [string];\n  }\n\n  var separatorIndex = string.indexOf(separator);\n\n  if (separatorIndex === -1) {\n    return [string];\n  }\n\n  return [string.slice(0, separatorIndex), string.slice(separatorIndex + separator.length)];\n};","'use strict';\n\nmodule.exports = function (str) {\n  return encodeURIComponent(str).replace(/[!'()*]/g, function (x) {\n    return \"%\".concat(x.charCodeAt(0).toString(16).toUpperCase());\n  });\n};","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Node & {\n  childImageSharp?: IGatsbyImageDataParent<Node>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (node: ImageDataLike): IGatsbyImageData | undefined => {\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        document.addEventListener(`load`, function onLoadListener() {\n          document.removeEventListener(`load`, onLoadListener)\n\n          onStartLoad?.({\n            wasCached: true,\n          })\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import memoize from '@emotion/memoize';\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar isPropValid = /* #__PURE__ */memoize(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\nexport default isPropValid;","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useContext, createElement, Fragment } from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport { withEmotionCache, ThemeContext } from '@emotion/react';\nimport { getRegisteredStyles, registerStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nvar testOmitPropsOnStringTag = isPropValid;\n\nvar testOmitPropsOnComponent = function testOmitPropsOnComponent(key) {\n  return key !== 'theme';\n};\n\nvar getDefaultShouldForwardProp = function getDefaultShouldForwardProp(tag) {\n  return typeof tag === 'string' && // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;\n};\n\nvar composeShouldForwardProps = function composeShouldForwardProps(tag, options, isReal) {\n  var shouldForwardProp;\n\n  if (options) {\n    var optionsShouldForwardProp = options.shouldForwardProp;\n    shouldForwardProp = tag.__emotion_forwardProp && optionsShouldForwardProp ? function (propName) {\n      return tag.__emotion_forwardProp(propName) && optionsShouldForwardProp(propName);\n    } : optionsShouldForwardProp;\n  }\n\n  if (typeof shouldForwardProp !== 'function' && isReal) {\n    shouldForwardProp = tag.__emotion_forwardProp;\n  }\n\n  return shouldForwardProp;\n};\n\nvar useInsertionEffect = React['useInsertion' + 'Effect'] ? React['useInsertion' + 'Effect'] : function useInsertionEffect(create) {\n  create();\n};\n\nfunction useInsertionEffectMaybe(create) {\n  useInsertionEffect(create);\n}\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serialized = _ref.serialized,\n      isStringTag = _ref.isStringTag;\n  registerStyles(cache, serialized, isStringTag);\n  var rules = useInsertionEffectMaybe(function () {\n    return insertStyles(cache, serialized, isStringTag);\n  });\n  return null;\n};\n\nvar createStyled = function createStyled(tag, options) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (tag === undefined) {\n      throw new Error('You are trying to create a styled element with an undefined component.\\nYou may have forgotten to import it.');\n    }\n  }\n\n  var isReal = tag.__emotion_real === tag;\n  var baseTag = isReal && tag.__emotion_base || tag;\n  var identifierName;\n  var targetClassName;\n\n  if (options !== undefined) {\n    identifierName = options.label;\n    targetClassName = options.target;\n  }\n\n  var shouldForwardProp = composeShouldForwardProps(tag, options, isReal);\n  var defaultShouldForwardProp = shouldForwardProp || getDefaultShouldForwardProp(baseTag);\n  var shouldUseAs = !defaultShouldForwardProp('as');\n  return function () {\n    var args = arguments;\n    var styles = isReal && tag.__emotion_styles !== undefined ? tag.__emotion_styles.slice(0) : [];\n\n    if (identifierName !== undefined) {\n      styles.push(\"label:\" + identifierName + \";\");\n    }\n\n    if (args[0] == null || args[0].raw === undefined) {\n      styles.push.apply(styles, args);\n    } else {\n      if (process.env.NODE_ENV !== 'production' && args[0][0] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles.push(args[0][0]);\n      var len = args.length;\n      var i = 1;\n\n      for (; i < len; i++) {\n        if (process.env.NODE_ENV !== 'production' && args[0][i] === undefined) {\n          console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n        }\n\n        styles.push(args[i], args[0][i]);\n      }\n    } // $FlowFixMe: we need to cast StatelessFunctionalComponent to our PrivateStyledComponent class\n\n\n    var Styled = withEmotionCache(function (props, cache, ref) {\n      var FinalTag = shouldUseAs && props.as || baseTag;\n      var className = '';\n      var classInterpolations = [];\n      var mergedProps = props;\n\n      if (props.theme == null) {\n        mergedProps = {};\n\n        for (var key in props) {\n          mergedProps[key] = props[key];\n        }\n\n        mergedProps.theme = useContext(ThemeContext);\n      }\n\n      if (typeof props.className === 'string') {\n        className = getRegisteredStyles(cache.registered, classInterpolations, props.className);\n      } else if (props.className != null) {\n        className = props.className + \" \";\n      }\n\n      var serialized = serializeStyles(styles.concat(classInterpolations), cache.registered, mergedProps);\n      className += cache.key + \"-\" + serialized.name;\n\n      if (targetClassName !== undefined) {\n        className += \" \" + targetClassName;\n      }\n\n      var finalShouldForwardProp = shouldUseAs && shouldForwardProp === undefined ? getDefaultShouldForwardProp(FinalTag) : defaultShouldForwardProp;\n      var newProps = {};\n\n      for (var _key in props) {\n        if (shouldUseAs && _key === 'as') continue;\n\n        if ( // $FlowFixMe\n        finalShouldForwardProp(_key)) {\n          newProps[_key] = props[_key];\n        }\n      }\n\n      newProps.className = className;\n      newProps.ref = ref;\n      return /*#__PURE__*/createElement(Fragment, null, /*#__PURE__*/createElement(Insertion, {\n        cache: cache,\n        serialized: serialized,\n        isStringTag: typeof FinalTag === 'string'\n      }), /*#__PURE__*/createElement(FinalTag, newProps));\n    });\n    Styled.displayName = identifierName !== undefined ? identifierName : \"Styled(\" + (typeof baseTag === 'string' ? baseTag : baseTag.displayName || baseTag.name || 'Component') + \")\";\n    Styled.defaultProps = tag.defaultProps;\n    Styled.__emotion_real = Styled;\n    Styled.__emotion_base = baseTag;\n    Styled.__emotion_styles = styles;\n    Styled.__emotion_forwardProp = shouldForwardProp;\n    Object.defineProperty(Styled, 'toString', {\n      value: function value() {\n        if (targetClassName === undefined && process.env.NODE_ENV !== 'production') {\n          return 'NO_COMPONENT_SELECTOR';\n        } // $FlowFixMe: coerce undefined to string\n\n\n        return \".\" + targetClassName;\n      }\n    });\n\n    Styled.withComponent = function (nextTag, nextOptions) {\n      return createStyled(nextTag, _extends({}, options, nextOptions, {\n        shouldForwardProp: composeShouldForwardProps(Styled, nextOptions, true)\n      })).apply(void 0, styles);\n    };\n\n    return Styled;\n  };\n};\n\nexport default createStyled;","import React, {FunctionComponent, ReactNode} from 'react'\r\nimport { Link } from 'gatsby'\r\nimport styled from \"@emotion/styled\";\r\nimport '../../Style.scss'\r\n\r\nexport type CategoryListProps = {\r\n    selectedCategory: string\r\n    categoryList: {\r\n        [key: string]: number\r\n    }\r\n}\r\n\r\ntype CategoryItemProps = {\r\n    active: boolean;\r\n}\r\n\r\ntype GatsbyLinkProps = {\r\n    children: ReactNode;\r\n    className?: string;\r\n    to: string;\r\n} & CategoryItemProps\r\n\r\nconst CategoryItem = styled(({ active, ...props }: GatsbyLinkProps) => (\r\n    <Link {...props} />\r\n))<CategoryItemProps>`\r\n  font-size: 17px;\r\n  font-weight: ${({ active }) => (active ? '900' : '400')};\r\n  color: ${({ active }) => (active ? '#333333' : '#6f6f6f')};\r\n  cursor: pointer;\r\n\r\n  &:last-of-type {\r\n    margin-right: 0;\r\n  }\r\n`\r\n\r\nconst CategoryList: FunctionComponent<CategoryListProps> = function ({\r\n    selectedCategory,\r\n    categoryList,\r\n    })\r\n{\r\n    return <>\r\n        {Object.entries(categoryList).map(([name, count]) => (\r\n            <CategoryItem\r\n                to={`/?category=${name}`}\r\n                active={name === selectedCategory}\r\n                key={name}\r\n            >\r\n                # {name} {count}\r\n            </CategoryItem>\r\n        ))}\r\n        </>\r\n}\r\n\r\nexport default CategoryList","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { FunctionComponent } from 'react'\r\nimport '../../Style.scss'\r\n\r\nconst TopSection: FunctionComponent = function () {\r\n    return <>\r\n        <header className=\"site-head\" >\r\n            <div className=\"head-container\">\r\n\r\n                <div className=\"head-main\">\r\n                    <h2 className=\"head-main-text\">\r\n                        안녕하세요. 한국시니어 연구소 기술 블로그입니다.\r\n                    </h2>\r\n                    <h2 className=\"head-main-text-mobile\">\r\n                        안녕하세요. 한국시니어 연구소<br/>기술 블로그입니다.\r\n                    </h2>\r\n                    <h5 className=\"sub-text\">\r\n                        함께 일하고, 함께 성장하기 위해 끊임없이 고민합니다.\r\n                    </h5>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    </>\r\n}\r\n\r\nexport default TopSection","import React, { FunctionComponent } from 'react'\r\nimport { Link } from 'gatsby'\r\nimport { PostFrontmatterType } from 'types/PostItem.types'\r\nimport { GatsbyImage } from 'gatsby-plugin-image'\r\n\r\n\r\ntype PostItemProps = PostFrontmatterType & { link: string }\r\n\r\nconst PostItem: FunctionComponent<PostItemProps> = function ({\r\n        title,\r\n        date,\r\n        categories,\r\n        summary,\r\n        thumbnail,\r\n        link,\r\n    })\r\n{\r\n    // const scrollTop = () => {\r\n    //   window.scrollTo(0,0);\r\n    // }\r\n    return (\r\n        <Link className=\"post-list\" to={link} >\r\n            <GatsbyImage className=\"post-thumbnail\" image={thumbnail.childImageSharp.gatsbyImageData} alt=\"post thumbnail img\" />\r\n            <div className=\"post-items\">\r\n                <div className=\"post-title\">{title}</div>\r\n                <div className=\"post-date\">{date}</div>\r\n                <div className=\"post-category\">\r\n                    {categories.map(category => (\r\n                        <div className=\"category-items\" key={category}>{category}</div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"summary\">{summary}</div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default PostItem","import React, { FunctionComponent, useMemo } from 'react'\r\nimport '../../Style.scss'\r\nimport PostItem from \"components/Main/PostItem\"\r\nimport { PostListItemType } from 'types/PostItem.types'\r\n// export type PostType = {\r\n//     node: {\r\n//         id: string\r\n//         frontmatter: {\r\n//             title: string\r\n//             summary: string\r\n//             date: string\r\n//             categories: string[]\r\n//             thumbnail: {\r\n//                 publicURL: string\r\n//             }\r\n//         }\r\n//     }\r\n// }\r\n\r\ntype PostListProps = {\r\n    selectedCategory: string\r\n    posts: PostListItemType[]\r\n}\r\n\r\n\r\nconst PostList: FunctionComponent<PostListProps> = function ({\r\n    selectedCategory,\r\n    posts,\r\n}) {\r\n    const postListData = useMemo(\r\n        () =>\r\n            posts.filter(({ node: { frontmatter: { categories } } }: PostListItemType) =>\r\n                selectedCategory !== 'All'\r\n                    ? categories.includes(selectedCategory)\r\n                    : true,\r\n            ),\r\n        [selectedCategory],\r\n    )\r\n    return <>\r\n        <div className=\"post-wrapper\">\r\n            {postListData.map(({ node: { id, fields:{ slug }, frontmatter }}: PostListItemType) => (\r\n                <PostItem {...frontmatter} link={ slug } key={id} />\r\n            ))}\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default PostList","import React, { FunctionComponent, useMemo } from 'react'\r\nimport CategoryList, {CategoryListProps} from 'components/Main/CategoryList'\r\nimport TopSection from \"components/Main/TopSection\";\r\nimport PostList from 'components/Main/PostList'\r\nimport { PostListItemType } from 'types/PostItem.types'\r\nimport '../Style.scss'\r\nimport { graphql } from 'gatsby'\r\nimport queryString, { ParsedQuery } from 'query-string'\r\nimport Template from \"components/Common/Template\";\r\n\r\n\r\n\r\ntype IndexPageProps = {\r\n    location: {\r\n        search: string\r\n    }\r\n    data: {\r\n        site: {\r\n            siteMetadata: {\r\n                title: string\r\n                description: string\r\n                siteUrl: string\r\n            }\r\n        }\r\n        allMarkdownRemark: {\r\n            edges: PostListItemType[]\r\n        }\r\n    }\r\n}\r\n\r\nconst IndexPage: FunctionComponent<IndexPageProps> = function ({\r\n   location: { search },\r\n   data: {\r\n       site: {\r\n           siteMetadata: {title, description, siteUrl}\r\n       },\r\n       allMarkdownRemark: {edges},\r\n       // file: {\r\n       //     childImageSharp: {gatsbyImageData},\r\n       //     publicURL\r\n       // }\r\n   }\r\n}) {\r\n    const parsed: ParsedQuery<string> = queryString.parse(search)\r\n    const selectedCategory: string =\r\n        typeof parsed.category !== 'string' || !parsed.category\r\n            ? 'All'\r\n            : parsed.category\r\n\r\n    const categoryList = useMemo(\r\n        () =>\r\n            edges.reduce(\r\n                (\r\n                    list: CategoryListProps['categoryList'],\r\n                    {\r\n                        node: {\r\n                            frontmatter: { categories },\r\n                        },\r\n                    }: PostListItemType,\r\n                ) => {\r\n                    categories.forEach(category => {\r\n                        if (list[category] === undefined) list[category] = 1;\r\n                        else list[category]++;\r\n                    });\r\n\r\n                    list['All']++;\r\n\r\n                    return list;\r\n                },\r\n                { All: 0 },\r\n            ),\r\n        [],\r\n    )\r\n\r\n    return (\r\n        <Template title={title} description={description} url={siteUrl} image={\"https://imagedelivery.net/jfIRjXneURbVKR0daxEchg/47c2b31f-48ad-4d52-f37f-93a6acfbb100/public\"}>\r\n            <TopSection/>\r\n            <div>\r\n                <div className=\"main-category-wrapper\">\r\n                    <CategoryList selectedCategory={selectedCategory} categoryList={categoryList} />\r\n                </div>\r\n                <div className=\"list\">\r\n                    <PostList selectedCategory={selectedCategory} posts={edges}/>\r\n                </div>\r\n            </div>\r\n        </Template>\r\n    )\r\n}\r\n\r\nexport default IndexPage\r\n\r\nexport const getPostList = graphql`\r\n  query getPostList {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        siteUrl\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            summary\r\n            date(formatString: \"YYYY.MM.DD.\")\r\n            categories\r\n            thumbnail {\r\n              childImageSharp {\r\n                gatsbyImageData(width: 768, height: 400)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;"],"names":["arrayLikeToArray","module","exports","arr","Array","isArray","__esModule","obj","key","value","Object","defineProperty","enumerable","configurable","writable","iter","Symbol","iterator","from","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","camelCase","input","options","assign","pascalCase","x","map","trim","filter","length","join","toUpperCase","toLowerCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","_","p1","m","charAt","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","err","left","right","prototype","concat","call","decode","tokens","match","encodedURI","replaceMap","exec","result","entries","keys","customDecodeURIComponent","predicate","ret","isArr","val","indexOf","_defineProperty","_slicedToArray","_toConsumableArray","_createForOfIteratorHelper","o","allowArrayLike","it","minLen","_arrayLikeToArray","n","toString","constructor","name","_unsupportedIterableToArray","F","s","done","e","_e","f","normalCompletion","didErr","step","next","_e2","return","len","arr2","strictUriEncode","decodeComponent","splitOnFirst","filterObject","encodeFragmentIdentifier","validateArrayFormatSeparator","encode","strict","encodeURIComponent","keysSorter","sort","a","b","Number","removeHash","hashStart","extract","queryStart","parseValue","parseNumbers","isNaN","parseBooleans","parse","query","arrayFormat","arrayFormatSeparator","formatter","accumulator","undefined","includes","isEncodedArray","newValue","item","arrayValue","parserForArrayFormat","create","_step","_iterator","param","_splitOnFirst","_splitOnFirst2","_key","_value","_i","_Object$keys","_i2","_Object$keys2","k","reduce","Boolean","stringify","object","shouldFilter","skipNull","skipEmptyString","index","keyValueSep","encoderForArrayFormat","objectCopy","_i3","_Object$keys3","parseUrl","url","_splitOnFirst3","_splitOnFirst4","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","parsedQueryFromUrl","queryString","getHash","pick","_exports$parseUrl","exclude","exclusionFilter","separator","separatorIndex","str","charCodeAt","height","format","isLoading","isLoaded","images","loading","style","shouldLoad","opacity","placeholder","layout","width","backgroundColor","objectFit","objectPosition","wrapperStyle","position","top","bottom","transition","sources","fallbackImage","paddingTop","maxWidth","display","React","alt","role","src","children","props","Fragment","Sizer","q","H","P","srcSet","decoding","fallback","t","sizes","Image","media","type","propTypes","PropTypes","Picture","displayName","isRequired","Placeholder","_Picture$propTypes","propName","componentName","MainImage","rest","image","altValidator","Set","onError","as","className","preactClass","class","onStartLoad","onLoad","overflow","wStyle","wClass","wrapperProps","useRef","useMemo","JSON","sizer","useEffect","renderImageToStringPromise","import","then","renderImageToString","swapPlaceholderImage","renderImage","root","current","querySelector","ssrImage","hasNativeLazyLoadSupport","complete","wasCached","setTimeout","removeAttribute","document","addEventListener","removeEventListener","onLoadListener","imageCache","add","cacheKey","has","innerHTML","animationFrame","requestAnimationFrame","cleanupCallback","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ae","memo","warn","GatsbyImageHydrator","GatsbyImage","se","checkDimensionProps","validLayouts","Error","GatsbyImageBrowser","__error","imageData","__imageData","console","StaticImage","reactPropsRegex","prop","testOmitPropsOnStringTag","testOmitPropsOnComponent","getDefaultShouldForwardProp","tag","composeShouldForwardProps","isReal","shouldForwardProp","optionsShouldForwardProp","__emotion_forwardProp","useInsertionEffect","Insertion","_ref","cache","serialized","isStringTag","createStyled","identifierName","targetClassName","__emotion_real","baseTag","__emotion_base","label","target","defaultShouldForwardProp","shouldUseAs","args","arguments","styles","__emotion_styles","push","raw","apply","Styled","w","FinalTag","classInterpolations","mergedProps","theme","useContext","T","registered","finalShouldForwardProp","newProps","createElement","defaultProps","withComponent","nextTag","nextOptions","CategoryItem","active","source","excluded","sourceKeys","___EmotionJSX","Link","selectedCategory","categoryList","count","to","title","date","categories","summary","thumbnail","link","childImageSharp","gatsbyImageData","category","posts","postListData","node","frontmatter","id","slug","fields","PostItem","search","location","data","site","siteMetadata","description","siteUrl","edges","allMarkdownRemark","parsed","list","forEach","All","Template","TopSection","CategoryList","PostList"],"sourceRoot":""}